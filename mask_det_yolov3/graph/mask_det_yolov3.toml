# Copyright (C) 2020 Huawei Technologies Co., Ltd. All rights reserved.

[driver]
dir = ["${HILENS_APP_ROOT}/etc/flowunit",
"${HILENS_APP_ROOT}/etc/flowunit/cpp",
"${HILENS_APP_ROOT}/model",
"${HILENS_MB_SDK_PATH}/flowunit"]
skip-default = true
[profile]
profile=false
trace=false
# dir="${HILENS_DATA_DIR}/mb_profile"
dir=""
[graph]
format = "graphviz"
graphconf = """digraph mask_det_yolov3 {
    node [shape=Mrecord]
    queue_size = 4
    batch_size = 1
    # input1[type=input,flowunit=input,device=cpu,deviceid=0]
    # httpserver_sync_receive[type=flowunit, flowunit=httpserver_sync_receive_v2, device=cpu, deviceid=0, time_out_ms=5000, endpoint="http://0.0.0.0:1234/v1/hello", max_requests=100]
    # httpserver_sync_reply[type=flowunit, flowunit=httpserver_sync_reply_v2, device=cpu, deviceid=0]
    
    # input1:input -> httpserver_sync_receive:in_url
    # httpserver_sync_receive:out_request_info -> httpserver_sync_reply:in_reply_info

    input1[type=input]
    
    data_source_parser[type=flowunit, flowunit=data_source_parser, device=cpu, deviceid=0]
    video_demuxer[type=flowunit, flowunit=video_demuxer, device=cpu, deviceid=0]
    video_decoder[type=flowunit, flowunit=video_decoder, device=rknpu, deviceid=0, pix_fmt=bgr]
    image_resize[type=flowunit, flowunit=resize, device=rknpu, deviceid=0, width=512, height=288]
    mask_detection[type=flowunit, flowunit=mask_infer, device=rknpu, deviceid=0]
    yolov3_post[type=flowunit, flowunit=yolov3_post, device=cpu, deviceid=0]
    draw_mask_bbox[type=flowunit, flowunit=draw_mask_bbox, device=cpu, deviceid=0]
    video_out[type=flowunit, flowunit=video_out, device=rknpu, deviceid=0]
    
	input1 -> data_source_parser:in_data
    data_source_parser:out_video_url -> video_demuxer:in_video_url
    video_demuxer:out_video_packet -> video_decoder:in_video_packet
    video_decoder:out_video_frame -> image_resize:in_image
    image_resize:out_image -> mask_detection:data
    mask_detection:"yolo/output1" -> yolov3_post:in_feat1
    mask_detection:"yolo/output2" -> yolov3_post:in_feat2
    mask_detection:"yolo/output3" -> yolov3_post:in_feat3
    video_decoder:out_video_frame -> draw_mask_bbox:in_image
    yolov3_post:out_data -> draw_mask_bbox:in_bbox
    draw_mask_bbox:out_image -> video_out:in_video_frame
}"""
[flow]
desc = "mask_det_yolov3 run in modelbox-rk-aarch64"
